{
    "C_Cpp.loggingLevel": "Debug",
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff"
    },
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "cSpell.language": "en,pl",
    "cSpell.suggestionMenuType": "quickFix",
    "cSpell.useGitignore": false,
    "diffEditor.codeLens": true,
    "editor.acceptSuggestionOnEnter": "on",
    "editor.accessibilitySupport": "off",
    "editor.codeActionsOnSave": {
        "source.organizeImports": "always"
    },
    "editor.cursorBlinking": "solid",
    "editor.cursorSurroundingLines": 1024,
    "editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.inlayHints.enabled": "on",
    "editor.lineNumbers": "off",
    "editor.minimap.enabled": false,
    "editor.mouseWheelZoom": true,
    "editor.multiDocumentOccurrencesHighlight": true,
    "editor.occurrencesHighlight": "multiFile",
    "editor.rulers": [
        80,
        90,
        100,
        120
    ],
    "editor.stickyScroll.enabled": true,
    "editor.suggest.matchOnWordStartOnly": false,
    "editor.tabCompletion": "on",
    "editor.wordWrap": "on",
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "extensions.ignoreRecommendations": true,
    "files.associations": {
        "**/.ssh/config": "ssh_config",
        "**/.ssh/configs/*.conf": "ssh_config",
        "**/i3/config": "i3",
        "*.build": "json",
        "*.task": "json"
    },
    "files.autoGuessEncoding": true,
    "files.autoSave": "onFocusChange",
    "files.exclude": {
        "**.o": true,
        "**/*.acn": true,
        "**/*.acr": true,
        "**/*.alg": true,
        "**/*.aux": true,
        "**/*.bbl": true,
        "**/*.bcf": true,
        "**/*.blg": true,
        "**/*.fls": true,
        "**/*.glg": true,
        "**/*.glo": true,
        "**/*.gls": true,
        "**/*.idx": true,
        "**/*.ind": true,
        "**/*.ist": true,
        "**/*.lof": true,
        "**/*.lot": true,
        "**/*.nav": true,
        "**/*.snm": true,
        "**/*.synctex.gz": true,
        "**/*.toc": true,
        "**/.*": true,
        "**/.vscode": true,
        "**/__pycache__": true
    },
    "files.insertFinalNewline": true,
    "files.saveConflictResolution": "overwriteFileOnDisk",
    "files.simpleDialog.enable": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "git.enableSmartCommit": true,
    "git.enabled": true,
    "git.mergeEditor": true,
    "jupyter.askForKernelRestart": false,
    "keyboard.dispatch": "keyCode",
    "leaderkey.overrides.user": {
        ", e": "Error...",
        ", e N": {
            "command": "editor.action.marker.next",
            "name": "next error in file"
        },
        ", e P": {
            "command": "editor.action.marker.prev",
            "name": "previous error in file"
        },
        ", e n": {
            "command": "editor.action.marker.nextInFiles",
            "name": "next error"
        },
        ", e p": {
            "command": "editor.action.marker.prevInFiles",
            "name": "previous error"
        },
        ", h": "Hover...",
        ", h t": {
            "command": "editor.action.showDefinitionPreviewHover",
            "name": "show type"
        },
        "SPC w t": {
            "commands": [
                "workbench.action.compareEditor.focusOtherSide",
                {
                    "args": {
                        "to": "viewPortCenter"
                    },
                    "command": "cursorMove"
                }
            ],
            "name": "toggle diff view"
        }
    },
    "mypy-type-checker.args": [
        "--ignore-missing-imports"
    ],
    "notebook.experimental.remoteSave": true,
    "notebook.formatOnCellExecution": true,
    "notebook.formatOnSave.enabled": true,
    "notebook.lineNumbers": "on",
    "notebook.output.textLineLimit": 8192,
    "path-autocomplete.triggerOutsideStrings": true,
    "pylint.args": [
        "--disable=line-too-long",
        "--disable=missing-class-docstring",
        "--disable=missing-function-docstring",
        "--disable=missing-module-docstring",
        "--disable=no-else-raise",
        "--disable=no-else-return",
        "--disable=redefined-outer-name",
        "--disable=use-dict-literal",
        "--generated-members=numpy.*,torch.*"
    ],
    "pylint.severity": {
        "refactor": "Information"
    },
    "python.analysis.autoFormatStrings": true,
    "python.analysis.completeFunctionParens": true,
    "python.analysis.inlayHints.callArgumentNames": "partial",
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.pytestParameters": true,
    "python.analysis.inlayHints.variableTypes": true,
    "remote.SSH.defaultExtensions": [
        "bodil.file-browser",
        "charliermarsh.ruff",
        "davidanson.vscode-markdownlint",
        "dcasella.i3",
        "foxundermoon.shell-format",
        "ionutvmi.path-autocomplete",
        "jacobdufault.fuzzy-search",
        "jimmyzjx.leaderkey",
        "kahole.magit",
        "llvm-vs-code-extensions.vscode-clangd",
        "mechatroner.rainbow-csv",
        "ms-python.mypy-type-checker",
        "ms-python.pylint",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-ssh-edit",
        "ms-vscode.cpptools",
        "ms-vscode.hexeditor",
        "ms-vscode.makefile-tools",
        "ms-vscode.remote-explorer",
        "mtxr.sqltools",
        "nico-castell.linux-desktop-file",
        "njpwerner.autodocstring",
        "stkb.rewrap",
        "streetsidesoftware.code-spell-checker",
        "streetsidesoftware.code-spell-checker-polish",
        "timonwong.shellcheck",
        "vscodevim.vim",
        "xadillax.viml"
    ],
    "remote.SSH.lockfilesInTmp": true,
    "security.workspace.trust.banner": "always",
    "security.workspace.trust.startupPrompt": "always",
    "settingsSync.keybindingsPerPlatform": false,
    "shellcheck.customArgs": [
        "--exclude=SC1091,SC2312",
        "--enable=all"
    ],
    "shellcheck.disableVersionCheck": true,
    "shellformat.flag": "--space-redirects",
    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,
    "telemetry.telemetryLevel": "off",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.localEchoEnabled": "off",
    "update.showReleaseNotes": false,
    "vim.easymotion": true,
    "vim.easymotionDimBackground": false,
    "vim.enableNeovim": true,
    "vim.handleKeys": {
        "<C-[>": true,
        "<C-a>": true,
        "<C-d>": true,
        "<C-r>": true,
        "<C-u>": true,
        "<C-w>": true,
        "<C-x>": true
    },
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "<C-a>"
            ],
            "commands": [
                "editor.action.selectAll"
            ]
        }
    ],
    "vim.leader": "<space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "comment": "normal/visual mode keybindings"
        },
        {
            "before": [
                "<leader>"
            ],
            "commands": [
                {
                    "args": [
                        "leaderkeyState",
                        "SPC"
                    ],
                    "command": "_setContext"
                },
                {
                    "args": "SPC",
                    "command": "leaderkey.render"
                }
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                {
                    "args": [
                        "leaderkeyState",
                        ","
                    ],
                    "command": "_setContext"
                },
                {
                    "args": ",",
                    "command": "leaderkey.render"
                }
            ]
        },
        {
            "after": [
                "g",
                "j"
            ],
            "before": [
                "j"
            ]
        },
        {
            "after": [
                "g",
                "k"
            ],
            "before": [
                "k"
            ]
        },
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "<C-r>"
            ],
            "commands": [
                "redo"
            ]
        },
        {
            "after": [
                "<leader>",
                "<leader>",
                "<leader>",
                "j"
            ],
            "before": [
                "f"
            ]
        },
        {
            "after": [
                "f"
            ],
            "before": [
                "g",
                "f"
            ]
        },
        {
            "after": [
                "%"
            ],
            "before": [
                "%"
            ]
        },
        {
            "comment": "normal mode keybindings"
        },
        {
            "before": [
                "K"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        }
    ],
    "vim.useCtrlKeys": false,
    "vim.useSystemClipboard": true,
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "comment": "normal/visual mode keybindings"
        },
        {
            "before": [
                "<leader>"
            ],
            "commands": [
                {
                    "args": [
                        "leaderkeyState",
                        "SPC"
                    ],
                    "command": "_setContext"
                },
                {
                    "args": "SPC",
                    "command": "leaderkey.render"
                }
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                {
                    "args": [
                        "leaderkeyState",
                        ","
                    ],
                    "command": "_setContext"
                },
                {
                    "args": ",",
                    "command": "leaderkey.render"
                }
            ]
        },
        {
            "after": [
                "g",
                "j"
            ],
            "before": [
                "j"
            ]
        },
        {
            "after": [
                "g",
                "k"
            ],
            "before": [
                "k"
            ]
        },
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "<C-r>"
            ],
            "commands": [
                "redo"
            ]
        },
        {
            "after": [
                "<leader>",
                "<leader>",
                "<leader>",
                "j"
            ],
            "before": [
                "f"
            ]
        },
        {
            "after": [
                "f"
            ],
            "before": [
                "g",
                "f"
            ]
        },
        {
            "after": [
                "%"
            ],
            "before": [
                "%"
            ]
        },
        {
            "comment": "visual mode keybindings"
        },
        {
            "after": [
                "p",
                "g",
                "v",
                "y"
            ],
            "before": [
                "p"
            ]
        },
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        }
    ],
    "window.autoDetectColorScheme": true,
    "window.commandCenter": false,
    "window.customTitleBarVisibility": "auto",
    "window.menuBarVisibility": "toggle",
    "window.openFoldersInNewWindow": "off",
    "workbench.activityBar.location": "top",
    "workbench.editor.focusRecentEditorAfterClose": false,
    "workbench.editor.showTabs": "none",
    "workbench.editor.tabSizing": "fixed",
    "workbench.enableExperiments": false,
    "workbench.startupEditor": "none",
    "workbench.tips.enabled": false,
    "workbench.welcomePage.walkthroughs.openOnInstall": false
}
