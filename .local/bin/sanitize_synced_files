#!/usr/bin/env bash

function get_all_tracked_files() {
    git rev-parse --show-toplevel | xargs git ls-files --full-name
}

function sort_json_files() {
    for file in $(get_all_tracked_files | grep "\.sorted\.json$"); do
        jq --indent 4 --sort-keys . "${file}" | sponge "${file}"
    done
}

function format_json_files() {
    for file in $(get_all_tracked_files | grep "\.json$"); do
        jq --indent 4 . "${file}" | sponge "${file}"
    done
}

function do_all_jsons() {
    sort_json_files
    format_json_files
}

function sort_txt_files() {
    for file in $(get_all_tracked_files | grep "\.sorted\.txt$"); do
        sort --output "${file}"{,}
    done
}

function sort_numeric_txt_files() {
    for file in $(get_all_tracked_files | grep "\.sorted_numeric\.txt$"); do
        sort --numeric-sort --output "${file}"{,}
    done
}

function format_shell_files() {
    get_all_tracked_files | grep "\.sh$" | xargs readlink --canonicalize |
        xargs shfmt --indent 4 --space-redirects --write
}

function apply_suggestions_to_shell_files() {
    git_root="$(git rev-parse --show-toplevel)"
    get_all_tracked_files | grep "\.sh$" | xargs readlink --canonicalize |
        xargs shellcheck --exclude=SC1091,SC2312 --enable=all --format=diff |
        sed "s|--- ${git_root}|--- a|g" |
        sed "s|+++ ${git_root}|+++ b|g" |
        patch --strip=1 --directory="${git_root}"
}

function lint_shell_files() {
    get_all_tracked_files | grep "\.sh$" |
        xargs shellcheck --exclude=SC1091,SC2312 --enable=all
}

function do_all_shell_files() {
    format_shell_files
    apply_suggestions_to_shell_files
    lint_shell_files
}

function format_python_files() {
    get_all_tracked_files | grep "\.py$" | xargs readlink --canonicalize |
        xargs ruff format --quiet
}

function isort_python_files() {
    get_all_tracked_files | grep "\.py$" | xargs readlink --canonicalize |
        xargs ruff check --select I --fix
}

function lint_python_files() {
    get_all_tracked_files | grep "\.py$" | xargs readlink --canonicalize |
        xargs ruff check --fix
}

function do_all_python_files() {
    format_python_files
}

# Parallel exectuion with tracking proceesses ##################################
declare -A running_processes
declare -a running_processes_names

function run_and_save() {
    set -euo pipefail
    name="$1"
    running_processes_names+=("${name}")
    "$@" &
    running_processes["${name}"]="$!"
}

function wait_for_all() {
    for name in "${running_processes_names[@]}"; do
        pid="${running_processes[${name}]}"
        echo -n "${name}"
        wait "${pid}"
        echo -e "\tdone"
    done
}

function sanitize_synced_main() {
    run_and_save do_all_jsons
    run_and_save sort_txt_files
    run_and_save sort_numeric_txt_files
    run_and_save do_all_python_files
    run_and_save do_all_shell_files
    wait_for_all
}

################################################################################

if [[ "$#" -ne 1 ]] || [[ "${1}" != "--source-only" ]]; then
    set -euo pipefail

    sanitize_synced_main "${@}"
fi
