#!/usr/bin/env python3
import json
import re
import sys


def split_jsons_with_comments(lines):
    comments = []
    parts = [[]]
    for line in lines:
        if re.match(r"^\s*//", line):
            comments.append(line)
            if parts[-1][-1][-1] == ",":
                parts[-1][-1] = parts[-1][-1][:-1]

            start_character = parts[-1][0][0]
            end_character = {"{": "}", "[": "]"}[start_character]

            parts[-1].append(end_character)
            parts.append([start_character])
        else:
            parts[-1].append(line)

    json_parts = [json.loads("\n".join(part)) for part in parts]
    return comments, json_parts


def sort_json_parts(json_parts, indent=4):
    return [
        json.dumps(json_part, sort_keys=True, indent=indent) for json_part in json_parts
    ]


def assemble_json_with_comments(comments, json_parts):
    combined = []
    for i, (json_part, comment) in enumerate(zip(json_parts, comments)):
        if json_part in ("{}", "[]"):
            json_part = json_part[:-1]
        else:
            json_part = json_part[:-2] + ","

        combined.append(json_part)
        combined.append(comment)
        json_parts[i + 1] = json_parts[i + 1][2:]
    combined.append(json_parts[-1])
    return "\n".join(combined) + "\n"


def main():
    if len(sys.argv) - 1 != 1:
        print("Exactly one parameter required")
        sys.exit(1)
    file_name = sys.argv[1]

    with open(file_name, "r", encoding="utf8") as f:
        data = f.read().splitlines()

    comments, json_parts = split_jsons_with_comments(data)
    sorted_json_parts_strs = sort_json_parts(json_parts)
    sorted_json_str = assemble_json_with_comments(comments, sorted_json_parts_strs)

    with open(file_name, "w", encoding="utf8") as f:
        f.write(sorted_json_str)


if __name__ == "__main__":
    main()
